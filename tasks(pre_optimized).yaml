research_task:
  description: >
    consider: {topic}. ensure that you understand fully all aspects of the problems and then develop a proving or solving strategy
    for that problem with clear concise justifications and instructions for the following agents to base their work from.
  expected_output: >
    Present your final answer and the complete solution process in a JSON format. This should include:
                - A `float` value or a mathematical algebraic expression for the answer.
                - Detailed reasoning for each step of the solution.

            Your output should be formatted as a JSON object enclosed in Markdown code blocks tagged with 'json'. For example:
            
            ```json
            {{
                "reasoning": "<detailed solution process>",
                "answer": "<answer>",
            }}
            ```
            Ensure that all task requirements are meticulously followed in your response.
        """
  agent: researcher

reporting_task:
  description: >
       ## Evaluation Criteria:
        1. **Mathematical Equivalence**: Evaluate answers based on deep mathematical equivalence, not just numerical accuracy. Use advanced tools or techniques to verify if different algebraic or symbolic expressions are equivalent. Tools like symbolic computation software (e.g., Wolfram Alpha, SymPy) should be used to confirm equivalences such as \\( \\frac{{\\sqrt{{6}}-\\sqrt{{2}}}}{{2}} \\) being equivalent to \\( \\sqrt{{2 - \\sqrt{{3}}}} \\).
        2. **Scoring**: Assign a score of '1' for any answer that matches or is equivalent to the provided solution, whether it is an exact value, a choice label (e.g., A, B, C), or a correctly rounded numerical approximation. Assign a score of '0' for incorrect answers. Do not provide any explanatory feedback in your evaluation.
        3. **Handling Multiple Choices**: If the solution provided is a choice (e.g., A, B, C, D, E, F) and the student identifies this choice correctly, treat it as correct. If the solution is an exact value and the student provides the corresponding choice that reflects this value correctly according to the problem's context, also treat it as correct.
        4. **Numerical Equivalence**: Treat numerical answers as equivalent if they are correct to at least two decimal places or more, depending on the precision provided in the solution. For instance, both 0.913 and 0.91 should be accepted if the solution is accurate within two decimal places.
        5. **Symbolic and Algebraic Identities**: Recognize and accept equivalent algebraic forms, such as \\( \\sin^2(x) + \\cos^2(x) = 1 \\) or \\( e^{{i\\pi}} + 1 = 0 \\), as correct.
        6. **Trigonometric and Logarithmic Forms**: Accept equivalent trigonometric and logarithmic expressions, acknowledging identities and transformations that might alter the form but not the value.
        7. **Comprehensive Evaluation**: Encourage the use of computational tools to check for equivalence in cases where expressions are too complex for straightforward visual inspection.
        The answer is {answer}
  expected_output: >
    Present the final score in a json format. The final score is 0 if the answer is incorrect and 1 if the answer is correct.

            Your output should be formatted as a JSON object. For example:
            
            
            {{
                "score": "<score (0 0r 1)>",
            }}
            
            PLEASE ONLY RETURN A VALID JSON OBJECT CONTAINING THE SCORE AS ABOVE
        """
  agent: reporting_analyst


